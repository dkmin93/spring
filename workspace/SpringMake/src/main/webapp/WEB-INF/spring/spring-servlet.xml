<?xml version="1.0" encoding="UTF-8"?>
<beans  
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 컨트롤러로 사용할 클래스 빈으로 등록 -->
	<bean id="aaa" class="com.simple.controller.MainController"></bean>
	<!-- prop의 값이 id로 들어온다 -->

	<!-- 핸들러맵핑, 핸들러 어댑터 구현 -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="1" /> <!-- 첫번째로 로딩시키겠다는 뜻! -->
		<property name="mappings">
			<!-- 브라우저에서 /test/aaa 요청이 들어오면 aaa빈을 동작시키겠다. -->
			<props>     <!-- ""안이 키 / 값 -->
				<prop key="/test/aaa">aaa</prop>
				<prop key="/test/bbb">aaa</prop>
			</props>
		</property>
	</bean>
<!-- 어려운 방법 -->
	
	
	
	<!-- view resolver 객체 (컨트롤러에서 반환되는 URL 경로를 합성) -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 핸들러맵핑, 핸들러어댑터 역할을 대신하고 스프링에서 사용할 수 있는 다양한 어노테이션들을 활성화해준다-->
	<mvc:annotation-driven />
	<!-- @Controller 어노테이션을 빈으로   자동생성 해준다. -->
	<context:component-scan base-package="com.simple.controller"/>
	<!-- 정적리소스맵 (css, img, js, html) 굳이 컨트롤러를 태울필요가 없기 때문에, 바로 연결 -->
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<!-- 이게 쉬운방법 -->




</beans>